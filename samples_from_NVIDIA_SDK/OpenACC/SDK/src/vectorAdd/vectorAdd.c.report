* Line 42 contains the following statement
#pragma acc enter data copyin(A[0:N],B[0:N])
that has been as been translated into:
#pragma omp target enter data map(to:A[0:N],B[0:N])


* Line 44 contains the following statement
#pragma acc enter data create(C[0:N])
that has been as been translated into:
#pragma omp target enter data map(alloc:C[0:N])


* Line 46 contains the following statement
#pragma acc kernels loop present(A[0:N],B[0:N],C[0:N]) independent
that has been as been translated into:
#pragma omp target teams loop order(concurrent) map(present,alloc:A[0:N],B[0:N],C[0:N])
* WARNING(s)! Please review the translation.
  1. The kernels construct in OpenACC is a hint to the compiler of where it should look for parallelism. OpenMP does not have a direct translation for this construct.


* Line 51 contains the following statement
#pragma acc exit data copyout(C[0:N])
that has been as been translated into:
#pragma omp target exit data map(from:C[0:N])


* Line 52 contains the following statement
#pragma acc exit data delete(A[0:N],B[0:N])
that has been as been translated into:
#pragma omp target exit data map(delete:A[0:N],B[0:N])


